package JavaSeaBattle;


import java.util.Objects;
import java.util.Random;
import java.util.Scanner;

// –ù–∞—à–∞ –∏–≥—Ä–∞
public class BattleShip {
    // –†–∞–Ω–¥–æ–º –Ω—É–∂–µ–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫—Ç–æ –±—É–¥–µ—Ç —Ö–æ–¥–∏—Ç—å –ø–µ—Ä–≤—ã–º
    private final Random random = new Random();
    private final Scanner scanner = new Scanner(System.in);
    // –ü–µ—Ä–≤—ã–π —Ñ–ª–∞–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–≥—Ä–æ–∫–æ–º, –µ—Å–ª–∏ –≤—Å–µ –æ–∫–µ–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è true
    private boolean flag = false;
    // –í—Ç–æ—Ä–æ–π —Ñ–ª–∞–≥ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏–¥–µ—Ç –ª–∏ –µ—â–µ –∏–≥—Ä–∞
    private boolean isGame = false;
    GameField player1;
    GameField player2;

    /*
    –°—á–µ—Ç—á–∏–∫ —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫—Ç–æ —Å–µ–π—á–∞—Å —Ö–æ–¥–∏—Ç, 0 - –ø–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫, 1 - –≤—Ç–æ—Ä–æ–π
    –í —Å–∞–º–æ–π –ø–µ—Ä–≤–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫—Ç–æ —Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–º –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ
     */
    private int count = random.nextInt(2);

    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ –≥–¥–µ –≤—Å–µ –∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
    public BattleShip(GameField player1, GameField player2) {
        this.player1 = player1;
        this.player2 = player2;

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
        System.out.println("                     INFO");
        System.out.println("------------------------------------------------------");
        System.out.println("\uD83D\uDFE6 - –ó–æ–Ω–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è");
        System.out.println("\uD83D\uDFE9 - –û—Ä–µ–æ–ª –∫–æ—Ä–∞–±–ª—è (–µ–≥–æ –≤–æ–¥–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ) ");
        System.out.println("üõ•Ô∏è - –ö–æ—Ä–∞–±–ª—å" );
        System.out.println("\uD83D\uDFE5 - –ö–æ—Ä–∞–±–ª—å –±—ã–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω");
        System.out.println("\uD83D\uDFE8 - –í—ã—Å—Ç—Ä–µ–ª —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ –º–∏–º–æ");
        System.out.println("–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –∫–æ–≥–¥–∞ –Ω–∞ –ø–æ–ª–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –¥–≤—É—Ö –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ –æ—Å—Ç–∞–µ—Ç—Å—è —Ü–µ–ª—ã—Ö –∫–æ—Ä–∞–±–ª–µ–π");
        System.out.println("–°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –≤–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏");
        System.out.println("------------------------------------------------------" + "\n");

        // –†–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞, –ø–æ—Å–ª–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è 13 –ø—Ä–æ–±–µ–ª–æ–≤, —á—Ç–æ–±—ã –≤—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –Ω–µ —É–≤–∏–¥–µ–ª –ø–æ–ª–µ
        player1.rasstanovka();
        for (int i = 0; i < 13; i++) {
            System.out.println();
        }
        // –†–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        player2.rasstanovka();
        for (int i = 0; i < 13; i++) {
            System.out.println();
        }

        // –ü–æ–∫–∞ —Ñ–ª–∞–≥ isGame != true, –∏–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è
        while (!isGame) {
            String line = "";

            // –•–æ–¥ –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            if (count == 0) {
                System.out.println("–•–æ–¥–∏—Ç –∏–≥—Ä–æ–∫ " + player1.getPlayerName());

                //–ü–æ–∫–∞ flag != true , –±—É–¥–µ—Ç –ø—Ä–æ—Å–∏—Ç—Å—è –≤–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –ü–†–ê–í–ò–õ–¨–ù–´–• –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
                while (!flag) {
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∂–µ–ª–∞–µ—Ç–µ –Ω–∞–Ω–µ—Å—Ç–∏ —É–¥–∞—Ä( —Ñ–æ—Ä–º–∞—Ç: y,x)");
                    System.out.println("1.–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–µ –ø–æ–ª–µ");
                    System.out.println("2.–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –≤—ã —É–∂–µ –Ω–∞–Ω–æ—Å–∏–ª–∏ —É–¥–∞—Ä");
                    try {
                        line = scanner.nextLine().trim();
                        // –º–µ—Ç–æ–¥ checkOfFormat –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤–µ—Ä–Ω–æ
                        flag = checkOfFormat(line);
                    } catch (Exception e) {
                        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—ã–ª–µ–∑–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ—Å–∏—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –≤–µ—Ä–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
                        e.printStackTrace();
                        System.err.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ!");
                    }
                }
                // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –≥–¥–µ –∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–∞–º —Ö–æ–¥ –∏–≥—Ä–æ–∫–∞
                stepOfPlayer(line, player1);
                flag = false;
                count = 1;
            } else {
                // –•–æ–¥ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞, –≤—Å–µ —Ç–æ–∂–µ —Å–∞–º–æ–µ
                System.out.println("–•–æ–¥–∏—Ç –∏–≥—Ä–æ–∫ " + player2.getPlayerName());
                while (!flag) {
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∂–µ–ª–∞–µ—Ç–µ –Ω–∞–Ω–µ—Å—Ç–∏ —É–¥–∞—Ä( —Ñ–æ—Ä–º–∞—Ç: y,x)");
                    System.out.println("1.–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–µ –ø–æ–ª–µ");
                    System.out.println("2.–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –≤—ã —É–∂–µ –Ω–∞–Ω–æ—Å–∏–ª–∏ —É–¥–∞—Ä");
                    try {
                        line = scanner.nextLine().trim();
                        flag = checkOfFormat(line);
                    } catch (Exception e) {
                        System.err.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ!");
                    }
                }
                stepOfPlayer(line, player2);
                flag = false;
                count = 0;
            }
        }
        // –≠—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã–≤–æ–¥—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π isGame –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
        System.out.println("–ü–æ–ª–µ –∏–≥—Ä–æ–∫–∞: " + player2.getPlayerName());
        player1.printField();
        System.out.println("–ü–æ–ª–µ –∏–≥—Ä–æ–∫–∞: " + player1.getPlayerName());
        player2.printField();
    }

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    boolean checkOfFormat(String line) {
        String[] lineSplitSize = line.split(",");
        // –ï—Å–ª–∏ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ 1, –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –º–µ—Ç–æ–¥ —Å –≤—ã–≤–æ–¥–æ–º –ø–æ–ª—è –∏–≥—Ä–æ–∫–∞ –Ω–∞ —ç–∫—Ä–∞–Ω
        if(lineSplitSize.length==1 && Integer.parseInt(lineSplitSize[0]) == 1) {
          printOfField(count);
            System.out.println();
          return false;
        }
        // –ï—Å–ª–∏ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ 2, –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –º–µ—Ç–æ–¥ —Å –≤—ã–≤–æ–¥–æ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã —Ä–∞–Ω–µ–µ
        if(lineSplitSize.length==1 && Integer.parseInt(lineSplitSize[0]) == 2) {
            printOfCoordinates(count);
            return false;
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ –¥–ª—è —É–¥–∞—Ä–∞
        if (lineSplitSize.length != 2) {
            System.err.println("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –¥–≤–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!");
            return false;
        }
        if(line.equals("")) {
            return false;
        }
        int y = Integer.parseInt(lineSplitSize[0]);
        int x = Integer.parseInt(lineSplitSize[1]);
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if ((x > 10 || x <= 0) || (y > 10 || y <= 0)) {
            System.err.println("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0 –∏ –±–æ–ª—å—à–µ 10!");
            return false;
        }
        return true;
    }


    // –®–∞–≥ –æ–¥–Ω–æ–≥–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤
    void stepOfPlayer(String line, GameField player) {
        // –í—ã–¥–∞—á–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
        String[][] fieldPlayer = player.getField_player();
        String[] lineSplitSize = line.split(",");
        int y = Integer.parseInt(lineSplitSize[0]);
        int x = Integer.parseInt(lineSplitSize[1]);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑—ã–≤–∞–ª —É–∂–µ —ç—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        if(fieldPlayer[y][x].equals("\uD83D\uDFE8") || fieldPlayer[y][x].equals("\uD83D\uDFE5")) {
            while ((fieldPlayer[y][x].equals("\uD83D\uDFE8") || (fieldPlayer[y][x].equals("\uD83D\uDFE5")))) {
                System.err.println("–í—ã —É–∂–µ —É–∫–∞–∑—ã–≤–∞–ª–∏ —ç—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–∏–µ");
                line = scanner.nextLine();
                try {
                    String[] lineSplitSize2 = line.split(",");
                    y = Integer.parseInt(lineSplitSize2[0]);
                    x = Integer.parseInt(lineSplitSize2[1]);
                } catch (Exception e) {
                    System.err.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–∫ —É–∫–∞–∑–∞–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ!");
                }
            }

        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø–∞–ª –ª–∏ –∏–≥—Ä–æ–∫ –≤ –∫–æ—Ä–∞–±–ª—å, —Ü–µ–ø–æ—á–∫–æ–π –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ–≥–æ –û—Ä–µ–æ–ª–∞, –µ—Å—Ç—å –ª–∏ —Ç–∞–º –µ—â–µ —á–∞—Å—Ç—å –æ—Ç –∫–æ—Ä–∞–±–ª—è
        if (fieldPlayer[y][x].equals("üõ•Ô∏è")) {
            if (!Objects.equals(fieldPlayer[y][x + 1], "üõ•Ô∏è")) {
                if (!Objects.equals(fieldPlayer[y][x - 1], "üõ•Ô∏è")) {
                    if (!Objects.equals(fieldPlayer[y + 1][x], "üõ•Ô∏è")) {
                        if (!Objects.equals(fieldPlayer[y - 1][x], "üõ•Ô∏è")) {
                            // –ï—Å–ª–∏ –∂–µ –≤–æ–∫—Ä—É–≥ –±–æ–ª—å—à–µ –Ω–µ—Ç –µ–≥–æ —á–∞—Å—Ç–µ–π, —Ç–æ –∫–æ—Ä–∞–±–ª—å –±—ã–ª —É—Ç–æ–ø–ª–µ–Ω
                            System.out.println("–ö–æ—Ä–∞–±–ª—å –ø–æ—Ç–æ–ø–ª–µ–Ω!");
                            fieldPlayer[y][x] = "\uD83D\uDFE5";
                            player.shipCount += 1;
                            return;
                        }
                    }
                }
            }
            // –ï—Å–ª–∏ –∂–µ –∫–æ—Ä–∞–±–ª—å –µ—â–µ –∏–º–µ–µ—Ç –∫–∞–∫—É—é –ª–∏–±–æ —á–∞—Å—Ç—å, —Ç–æ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–ø–∞–¥–∞–Ω–∏–µ
            System.out.println("–ü–æ–ø–∞–¥–∞–Ω–∏–µ!");
            fieldPlayer[y][x] = "\uD83D\uDFE5";
            player.shipCount += 1;
            return;
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –µ—â–µ —Ü–µ–ª—ã–µ –∫–æ—Ä–∞–±–ª–∏ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ
        if (player.shipCount == 20) {
            System.out.println("–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞, –ø–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫ " + player.getPlayerName());
            isGame = true;
            return;
        }
        // –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º –∂–µ —Å–ª—É—á–∞–µ —É–¥–∞—Ä –ø—Ä–∏—à–µ–ª—Å—è –º–∏–º–æ
            System.out.println("–ú–∏–º–æ!");
            fieldPlayer[y][x] = "\uD83D\uDFE8";
    }

    // –í—ã–≤–æ–¥ –ø–æ–ª—è –Ω–∞ –∫–æ–Ω—Å–æ–ª—å
    public void printOfField(int count){
        if(count==0){
            player2.printField();
            for (int i = 0; i < 9; i++) {
                System.out.println();
            }

        } else {
            player1.printField();
            for (int i = 0; i < 9; i++) {
                System.out.println();
            }
        }
    }


    // –í—ã–≤–æ–¥ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç , –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–Ω–µ–µ —É–∂–µ –±—ã–ª–∏ —É–∫–∞–∑–∞–Ω—ã
    void printOfCoordinates(int count){
        if(count==0){
            for (int i = 0; i < player1.getField_player().length; i++) {
                for (int j = 0; j < player1.getField_player()[0].length; j++) {
                    if(player1.getField_player()[i][j].equals("\uD83D\uDFE8")
                            || player1.getField_player()[i][j].equals("\uD83D\uDFE5")) {
                        System.out.println("y = " + i + "," + "x = " + j);
                    }
                }
            }
        } else {
            for (int i = 0; i < player2.getField_player().length; i++) {
                for (int j = 0; j < player2.getField_player()[0].length; j++) {
                    if(player2.getField_player()[i][j].equals("\uD83D\uDFE8")
                            || player2.getField_player()[i][j].equals("\uD83D\uDFE5")) {
                        System.out.println("y = " + i + "," + "x = " + j);
                    }
                }
            }
        }
    }
}


